// <auto-generated />
using System;
using KFP.DATA_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KFP.Migrations
{
    [DbContext(typeof(KFPContext))]
    [Migration("20250310032915_AddingMenuItemCategoriesAndType")]
    partial class AddingMenuItemCategoriesAndType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("CategoryMenuItem", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoriesId", "MenuItemsId");

                    b.HasIndex("MenuItemsId");

                    b.ToTable("CategoryMenuItem");
                });

            modelBuilder.Entity("KFP.DATA.AppUser", b =>
                {
                    b.Property<int>("AppUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PINHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("avatarCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppUserID");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("KFP.DATA.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KFP.DATA.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MenuItemType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SalePrice")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("picture")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("KFP.DATA.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("SessionId");

                    b.HasIndex("AppUserID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("CategoryMenuItem", b =>
                {
                    b.HasOne("KFP.DATA.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KFP.DATA.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("MenuItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KFP.DATA.Session", b =>
                {
                    b.HasOne("KFP.DATA.AppUser", "appUser")
                        .WithMany()
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appUser");
                });
#pragma warning restore 612, 618
        }
    }
}
