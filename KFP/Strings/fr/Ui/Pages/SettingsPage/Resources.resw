<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="App_Restart_Needed_to_apply_language_change" xml:space="preserve">
    <value>Pour appliquer le changement de langue, il faut redémarrer l'application</value>
  </data>
  <data name="App_Window_Display.Header" xml:space="preserve">
    <value>Affichage de la fenêtre</value>
  </data>
  <data name="Cancel_3" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="CurrencySettingCard.Header" xml:space="preserve">
    <value>Devise</value>
  </data>
  <data name="CustomerOrderPrinterSettingCard.Header" xml:space="preserve">
    <value>Imprimante du ticket de commande client</value>
  </data>
  <data name="EstablishmentAddressSettingCard.Description" xml:space="preserve">
    <value>Peut être imprimée sur les tickets ou les reçus</value>
  </data>
  <data name="EstablishmentAddressSettingCard.Header" xml:space="preserve">
    <value>Adresse</value>
  </data>
  <data name="EstablishmentNameSettingCard.Description" xml:space="preserve">
    <value>Peut être imprimé sur les tickets ou les reçus</value>
  </data>
  <data name="EstablishmentNameSettingCard.Header" xml:space="preserve">
    <value>Nom de l'établissement</value>
  </data>
  <data name="EstablishmentPhoneNumber1SettingCard.Description" xml:space="preserve">
    <value>Peut être imprimé sur les tickets ou les reçus</value>
  </data>
  <data name="EstablishmentPhoneNumber1SettingCard.Header" xml:space="preserve">
    <value>Premier numéro de téléphone</value>
  </data>
  <data name="EstablishmentPhoneNumber2SettingCard.Description" xml:space="preserve">
    <value>Peut être imprimé sur les tickets ou les reçus</value>
  </data>
  <data name="EstablishmentPhoneNumber2SettingCard.Header" xml:space="preserve">
    <value>Deuxième numéro de téléphone</value>
  </data>
  <data name="EstablishmentSelectorItem.Text" xml:space="preserve">
    <value>Établissement</value>
  </data>
  <data name="EstablishmentTextBox.Text" xml:space="preserve">
    <value>Établissement</value>
  </data>
  <data name="FullScreen.Content" xml:space="preserve">
    <value>Plein écran</value>
  </data>
  <data name="GeneralSettings.Text" xml:space="preserve">
    <value>Paramètres généraux</value>
  </data>
  <data name="generalSettingsSelectorItem.Text" xml:space="preserve">
    <value>Paramètres généraux</value>
  </data>
  <data name="KitchenOrderPrinterSettingCard.Description" xml:space="preserve">
    <value>Sélectionner l'imprimante des tickets cuisine</value>
  </data>
  <data name="KitchenOrderPrinterSettingCard.Header" xml:space="preserve">
    <value>Imprimante cuisine</value>
  </data>
  <data name="LanguageSettingCard.Description" xml:space="preserve">
    <value>selectionner la langue (Redémarrage necessaire de l'application)</value>
  </data>
  <data name="LanguageSettingCard.Header" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="minutesTextBlock.Text" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="NumberOfTablesSettingCard.Description" xml:space="preserve">
    <value>Entrez 0 si l'établissement ne dispose pas de tables</value>
  </data>
  <data name="NumberOfTablesSettingCard.Header" xml:space="preserve">
    <value>Nombre de tables</value>
  </data>
  <data name="orderLateDelaySettingCard.Description" xml:space="preserve">
    <value>Nombre de minutes avant que la commande ne soit considérée comme en retard (Alerte orange)</value>
  </data>
  <data name="orderLateDelaySettingCard.Header" xml:space="preserve">
    <value>Délai avant retard de commande</value>
  </data>
  <data name="orderOverdueDelaySettingCard.Description" xml:space="preserve">
    <value>Nombre de minutes avant que la commande ne soit considérée comme en dépassement (Alerte rouge)</value>
  </data>
  <data name="orderOverdueDelaySettingCard.Header" xml:space="preserve">
    <value>Délai avant dépassement de commande</value>
  </data>
  <data name="OrdersSelectorItem.Text" xml:space="preserve">
    <value>Commandes</value>
  </data>
  <data name="Overlapped.Content" xml:space="preserve">
    <value>Affichage fenêtré</value>
  </data>
  <data name="PreBillPrinterSettingCard.Description" xml:space="preserve">
    <value>Sélectionner l'imprimante pour les tickets de commande client</value>
  </data>
  <data name="PrintEstablishmentAddressWithPreBillSettingCard.Description" xml:space="preserve">
    <value>Ajouter l'adresse de l'établissement en en-tête du ticket de commande client ?</value>
  </data>
  <data name="PrintEstablishmentAddressWithPreBillSettingCard.Header" xml:space="preserve">
    <value>Imprimer l'adresse de l'établissement</value>
  </data>
  <data name="PrintEstablishmentAddressWithReceiptSettingCard.Description" xml:space="preserve">
    <value>Ajouter l'adresse de l'établissement en en-tête du reçu ?</value>
  </data>
  <data name="PrintEstablishmentAddressWithReceiptSettingCard.Header" xml:space="preserve">
    <value>Imprimer l'adresse de l'établissement</value>
  </data>
  <data name="PrintEstablishmentNameWithPreBillSettingCard.Description" xml:space="preserve">
    <value>Ajouter le nom de l'établissement en en-tête du ticket de commande client ?</value>
  </data>
  <data name="PrintEstablishmentNameWithPreBillSettingCard.Header" xml:space="preserve">
    <value>Imprimer le nom de l'établissement</value>
  </data>
  <data name="PrintEstablishmentNameWithReceiptSettingCard.Description" xml:space="preserve">
    <value>Ajouter le nom de l'établissement en en-tête du reçu ?</value>
  </data>
  <data name="PrintEstablishmentNameWithReceiptSettingCard.Header" xml:space="preserve">
    <value>Imprimer le nom de l'établissement</value>
  </data>
  <data name="PrintEstablishmentPhone1WithPreBillSettingCard.Description" xml:space="preserve">
    <value>Ajouter le premier numéro de téléphone en en-tête du ticket de commande client ?</value>
  </data>
  <data name="PrintEstablishmentPhone1WithPreBillSettingCard.Header" xml:space="preserve">
    <value>Imprimer le premier numéro de téléphone</value>
  </data>
  <data name="PrintEstablishmentPhone1WithReceiptSettingCard.Description" xml:space="preserve">
    <value>Ajouter le premier numéro de téléphone en en-tête du reçu ?</value>
  </data>
  <data name="PrintEstablishmentPhone1WithReceiptSettingCard.Header" xml:space="preserve">
    <value>Imprimer le premier numéro de téléphone</value>
  </data>
  <data name="PrintEstablishmentPhone2WithPreBillSettingCard.Description" xml:space="preserve">
    <value>Ajouter le deuxième numéro de téléphone en en-tête du ticket de commande client ?</value>
  </data>
  <data name="PrintEstablishmentPhone2WithPreBillSettingCard.Header" xml:space="preserve">
    <value>Imprimer le deuxième numéro de téléphone</value>
  </data>
  <data name="PrintEstablishmentPhone2WithRecieptSettingCard.Description" xml:space="preserve">
    <value>Ajouter le deuxième numéro de téléphone en en-tête du reçu ?</value>
  </data>
  <data name="PrintEstablishmentPhone2WithRecieptSettingCard.Header" xml:space="preserve">
    <value>Imprimer le deuxième numéro de téléphone</value>
  </data>
  <data name="PrintingSelectorItem.Text" xml:space="preserve">
    <value>Impression</value>
  </data>
  <data name="PrintingTextBlock.Text" xml:space="preserve">
    <value>Impression</value>
  </data>
  <data name="PrintKitchenOrderSettingCard.Description" xml:space="preserve">
    <value>Tickets pour la cuisine</value>
  </data>
  <data name="PrintKitchenOrderSettingCard.Header" xml:space="preserve">
    <value>Imprimer les tickets cuisine ?</value>
  </data>
  <data name="PrintPreBillSettingCard.Description" xml:space="preserve">
    <value>Imprimer un ticket de commande client avant le paiement</value>
  </data>
  <data name="PrintPreBillSettingCard.Header" xml:space="preserve">
    <value>Imprimer un ticket de commande client ?</value>
  </data>
  <data name="PrintReceiptSettingCard.Description" xml:space="preserve">
    <value>Imprimer un reçu de paiement lors de la confirmation</value>
  </data>
  <data name="PrintReceiptSettingCard.Header" xml:space="preserve">
    <value>Imprimer un reçu de paiement ?</value>
  </data>
  <data name="ReceiptPrinterSettingCard.Description" xml:space="preserve">
    <value>Sélectionner l'imprimante pour les reçus de paiement</value>
  </data>
  <data name="ReceiptPrinterSettingCard.Header" xml:space="preserve">
    <value>Imprimante des reçus de paiement</value>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>Redémarrer</value>
  </data>
  <data name="RestartNeeded" xml:space="preserve">
    <value>Redémarrage necessaire</value>
  </data>
</root>